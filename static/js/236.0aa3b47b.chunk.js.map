{"version":3,"file":"static/js/236.0aa3b47b.chunk.js","mappings":"wKAQA,IAJsB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACvB,OAAO,SAAC,IAAD,CAAWC,GAAIC,EAAAA,GAAAA,GAAf,SAAgCF,GACxC,C,2KCCKG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaG,WACpBE,SAAUL,EAAAA,KAAaG,aAGnBG,EAAgB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAiDZ,EA9CqB,WACnB,IAAME,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEF,cAAeA,EACfG,iBAAkBV,EAClBW,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAGC,UAKE,UAAC,KAAD,CAAME,MAAOC,EAAAA,GAAAA,GAAb,WACE,UAACC,EAAA,EAAD,CAAWC,QAAQ,OAAOpB,GAAIkB,EAAAA,GAAAA,GAA9B,sBAEE,SAAC,KAAD,CAAOG,KAAK,OAAOhB,KAAK,OAAOY,MAAOC,EAAAA,GAAAA,MACtC,SAAC,KAAD,CAAcb,KAAK,OAAOiB,UAAU,MAAML,MAAOC,EAAAA,GAAAA,SAEnD,UAACC,EAAA,EAAD,CAAWC,QAAQ,QAAQpB,GAAIkB,EAAAA,GAAAA,GAA/B,mBAEE,SAAC,KAAD,CAAOG,KAAK,MAAMhB,KAAK,QAAQY,MAAOC,EAAAA,GAAAA,MACtC,SAAC,KAAD,CACEb,KAAK,QACLiB,UAAU,MACVL,MAAOC,EAAAA,GAAAA,SAGX,UAACC,EAAA,EAAD,CAAWC,QAAQ,WAAWpB,GAAIkB,EAAAA,GAAAA,GAAlC,sBAEE,SAAC,KAAD,CAAOG,KAAK,WAAWhB,KAAK,WAAWY,MAAOC,EAAAA,GAAAA,MAC9C,SAAC,KAAD,CACEb,KAAK,WACLiB,UAAU,MACVL,MAAOC,EAAAA,GAAAA,SAGX,SAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYH,KAAK,SAAjC,0BAMP,EChDD,EAXiB,WACf,OACE,UAACI,EAAA,EAAD,YACE,6CACA,SAACC,EAAA,EAAD,WACE,SAAC,EAAD,QAIP,C","sources":["components/FormContainer/FormContainer.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Container } from '@mui/material';\nimport { container } from 'styles';\n\nconst FormContainer = ({ children }) => {\n  return <Container sx={container.form}>{children}</Container>;\n};\n\nexport default FormContainer;\n\nFormContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Button, FormLabel } from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { form } from 'styles';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form style={form.form}>\n        <FormLabel htmlFor=\"name\" sx={form.label}>\n          Username\n          <Field type=\"text\" name=\"name\" style={form.input} />\n          <ErrorMessage name=\"name\" component=\"div\" style={form.errorMessage} />\n        </FormLabel>\n        <FormLabel htmlFor=\"email\" sx={form.label}>\n          Email\n          <Field type=\"tel\" name=\"email\" style={form.input} />\n          <ErrorMessage\n            name=\"email\"\n            component=\"div\"\n            style={form.errorMessage}\n          />\n        </FormLabel>\n        <FormLabel htmlFor=\"password\" sx={form.label}>\n          Password\n          <Field type=\"password\" name=\"password\" style={form.input} />\n          <ErrorMessage\n            name=\"password\"\n            component=\"div\"\n            style={form.errorMessage}\n          />\n        </FormLabel>\n        <Button variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import { Box } from '@mui/material';\nimport FormContainer from 'components/FormContainer/FormContainer';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Box>\n      <title>Registration</title>\n      <FormContainer>\n        <RegisterForm />\n      </FormContainer>\n    </Box>\n  );\n};\n\nexport default Register;\n"],"names":["children","sx","container","schema","yup","shape","name","required","email","password","initialValues","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","register","style","form","FormLabel","htmlFor","type","component","Button","variant","Box","FormContainer"],"sourceRoot":""}