{"version":3,"file":"static/js/427.6a0e4539.chunk.js","mappings":"uNAGaA,GAASC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,6e,uCCGbE,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaG,WACpBE,SAAUL,EAAAA,KAAaG,aAGnBG,EAAgB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAuCZ,EApCqB,WACnB,IAAME,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEF,cAAeA,EACfG,iBAAkBV,EAClBW,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAGC,UAKE,UAAChB,EAAD,YACE,mBAAOkB,QAAQ,OAAf,sBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOb,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOc,UAAU,YAEtC,mBAAOF,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,MAAMb,KAAK,WACvB,SAAC,KAAD,CAAcA,KAAK,QAAQc,UAAU,YAEvC,mBAAOF,QAAQ,WAAf,sBAEE,SAAC,KAAD,CAAOC,KAAK,MAAMb,KAAK,cACvB,SAAC,KAAD,CAAcA,KAAK,WAAWc,UAAU,YAE1C,mBAAQD,KAAK,SAAb,0BAIP,ECzCD,EATiB,WACf,OACE,4BACE,6CACA,SAAC,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  outline: 2px solid gray;\n  border-radius: 8px;\n  padding: 10px;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n  }\n\n  input {\n    margin-top: 6px;\n  }\n\n  div {\n    color: #df0707;\n  }\n\n  button {\n    width: 120px;\n    background-color: #5ca8f4;\n    border-radius: 5px;\n    height: 20px;\n  }\n\n  button:hover {\n    background-color: blue;\n  }\n`;\n","import { FormEl } from './RegisterForm.styled';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <label htmlFor=\"name\">\n          Username\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label htmlFor=\"email\">\n          Email\n          <Field type=\"tel\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <Field type=\"tel\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </label>\n        <button type=\"submit\">Register</button>\n      </FormEl>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["FormEl","styled","Form","schema","yup","shape","name","required","email","password","initialValues","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","register","htmlFor","type","component"],"sourceRoot":""}