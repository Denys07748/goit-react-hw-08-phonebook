{"version":3,"file":"static/js/10.09560362.chunk.js","mappings":"yNAEaA,EAAeC,EAAAA,EAAAA,GAAH,+JASZC,EAAYD,EAAAA,EAAAA,GAAH,+X,mBCStB,EAfwB,SAAC,GAA0B,IAAxBE,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACL,EAAD,YACE,yBACGE,EADH,KACWC,MAEX,mBAAQG,KAAK,SAASC,QAAS,kBAAMH,GAASI,EAAAA,EAAAA,IAAcP,GAA7B,EAA/B,sBAKL,E,UCCD,EAdoB,WAClB,IAAMQ,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7B,OAA2B,IAApBF,EAASG,QACd,oDAEA,SAACd,EAAD,UACGW,EAASI,KAAI,gBAAGZ,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,SAAC,EAAD,CAA0BF,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,GAAhCF,EADV,KAKnB,E,UCfYa,EAAcf,EAAAA,EAAAA,MAAH,+I,UCmBxB,EAhBe,WACb,IAAMK,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAACU,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,SAACF,EAAD,CACER,KAAK,OACLW,YAAY,gBACZC,SAPqB,SAAAC,GAAC,OAAIf,GAASgB,EAAAA,EAAAA,GAAUD,EAAEE,cAAcC,OAAvC,KAW7B,E,UCoBD,EA3BiB,WACf,IAAMlB,GAAWC,EAAAA,EAAAA,MACXkB,GAAYb,EAAAA,EAAAA,IAAYc,EAAAA,IACxBC,GAAQf,EAAAA,EAAAA,IAAYgB,EAAAA,IACpBjB,GAAWC,EAAAA,EAAAA,IAAYiB,EAAAA,IAM7B,OAJAC,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,KAGF,4BACE,yBAAMmB,IAAcE,GAAS,2BACR,IAApBhB,EAASG,QACR,+FAIA,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,SAKT,C","sources":["components/ContactList/ContactList.styled.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 440px;\n  outline: 2px solid gray;\n  border-radius: 8px;\n  padding: 15px;\n`;\n\nexport const ContactEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 0;\n    margin-right: 10px;\n  }\n\n  button {\n    width: 100px;\n    background-color: #5ca8f4;\n    border-radius: 5px;\n    height: 20px;\n  }\n\n  button:hover {\n    background-color: blue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactEl } from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactEl>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </ContactEl>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ContactsList } from './ContactList.styled';\nimport ContactListItem from './ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return contacts.length === 0 ? (\n    <p>Ð¡ontacts not found</p>\n  ) : (\n    <ContactsList>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin-top: 10px;\n  width: 200px;\n  height: 25px;\n  border-radius: 4px;\n  padding-left: 7px;\n`;\n","import { Box } from '@mui/material';\nimport { FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => dispatch(setFilter(e.currentTarget.value));\n\n  return (\n    <Box pt={2}>\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Find contacts\"\n        onChange={handleFilterChange}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { fetchContacts } from 'redux/contacts/operations';\n// import { Container, TitleMain, TitleSec } from './App.styled';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div>{isLoading && !error && 'Request in progress...'}</div>\n      {contacts.length === 0 ? (\n        <p>\n          There are no contacts in your phone book yet. Please add contacts.\n        </p>\n      ) : (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactsList","styled","ContactEl","id","name","number","dispatch","useDispatch","type","onClick","deleteContact","contacts","useSelector","selectVisibleContacts","length","map","FilterInput","Box","pt","placeholder","onChange","e","setFilter","currentTarget","value","isLoading","selectIsLoading","error","selectError","selectContacts","useEffect","fetchContacts"],"sourceRoot":""}