{"version":3,"file":"static/js/111.83767e8d.chunk.js","mappings":"wKAQA,IAJsB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACvB,OAAO,SAAC,IAAD,CAAWC,GAAIC,EAAAA,GAAAA,GAAf,SAAgCF,GACxC,C,iKCCKG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaG,aAGnBE,EAAgB,CACpBH,MAAO,GACPE,SAAU,IA4CZ,EAzCkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEF,cAAeA,EACfG,iBAAkBT,EAClBU,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAGC,UAKE,UAAC,KAAD,CAAME,MAAOC,EAAAA,GAAAA,GAAb,WACE,UAACC,EAAA,EAAD,CAAWC,QAAQ,QAAQnB,GAAIiB,EAAAA,GAAAA,GAA/B,mBAEE,SAAC,KAAD,CAAOG,KAAK,MAAMC,KAAK,QAAQL,MAAOC,EAAAA,GAAAA,MACtC,SAAC,KAAD,CACEI,KAAK,QACLC,UAAU,MACVN,MAAOC,EAAAA,GAAAA,SAGX,UAACC,EAAA,EAAD,CAAWC,QAAQ,WAAWnB,GAAIiB,EAAAA,GAAAA,GAAlC,sBAEE,SAAC,KAAD,CAAOG,KAAK,WAAWC,KAAK,WAAWL,MAAOC,EAAAA,GAAAA,MAC9C,SAAC,KAAD,CACEI,KAAK,WACLC,UAAU,MACVN,MAAOC,EAAAA,GAAAA,SAGX,SAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYJ,KAAK,SAAjC,wBAMP,E,UCzCD,EAXc,WACZ,OACE,UAACK,EAAA,EAAD,CAAWC,GAAI,GAAf,WACE,sCACA,SAACC,EAAA,EAAD,WACE,SAAC,EAAD,QAIP,C","sources":["components/FormContainer/FormContainer.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Container } from '@mui/material';\nimport { container } from 'styles';\n\nconst FormContainer = ({ children }) => {\n  return <Container sx={container.form}>{children}</Container>;\n};\n\nexport default FormContainer;\n\nFormContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Button, FormLabel } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { form } from 'styles';\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form style={form.form}>\n        <FormLabel htmlFor=\"email\" sx={form.label}>\n          Email\n          <Field type=\"tel\" name=\"email\" style={form.input} />\n          <ErrorMessage\n            name=\"email\"\n            component=\"div\"\n            style={form.errorMessage}\n          />\n        </FormLabel>\n        <FormLabel htmlFor=\"password\" sx={form.label}>\n          Password\n          <Field type=\"password\" name=\"password\" style={form.input} />\n          <ErrorMessage\n            name=\"password\"\n            component=\"div\"\n            style={form.errorMessage}\n          />\n        </FormLabel>\n        <Button variant=\"contained\" type=\"submit\">\n          Log In\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import FormContainer from 'components/FormContainer/FormContainer';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport { Container } from '@mui/material';\n\nconst Login = () => {\n  return (\n    <Container pt={10}>\n      <title>Login</title>\n      <FormContainer>\n        <LoginForm />\n      </FormContainer>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["children","sx","container","schema","yup","shape","email","required","password","initialValues","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","logIn","style","form","FormLabel","htmlFor","type","name","component","Button","variant","Container","pt","FormContainer"],"sourceRoot":""}